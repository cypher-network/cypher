name: build cypher node release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Setup .NET Core 5.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.101' # SDK Version to use.
    - name: Checkout latest
      uses: actions/checkout@master
    - name: build cypher
      run:  |
        dotnet restore cypher.sln
        dotnet publish cypnode --output publish/cypnode --configuration Release
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
        ls -al ${{ github.workspace }}/publish/cypnode/
        zip cypnode.${{ steps.get_version.outputs.VERSION }}.zip ${{ github.workspace }}/publish/cypnode/*
        echo $PWD
        ls -al .
    #- name: Archive build artifacts
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: dist
    #    path: |
    #      ${{ github.workspace }}/publish/cypnode/
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: cypnode.${{ steps.get_version.outputs.VERSION }}.zip
        asset_name: cypnode.${{ steps.get_version.outputs.VERSION }}.zip
        asset_content_type: application/zip